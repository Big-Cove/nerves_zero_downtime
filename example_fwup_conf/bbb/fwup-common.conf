#
# Firmware metadata
#

# All of these can be overriden using environment variables of the same name.
#
#  Run 'fwup -m' to query values in a .fw file.
#  Use 'fw_printenv' to query values on the target.
#
# These are used by Nerves libraries to introspect.
define(NERVES_FW_PRODUCT, "Nerves Firmware")
define(NERVES_FW_DESCRIPTION, "")
define(NERVES_FW_VERSION, "${NERVES_SDK_VERSION}")
define(NERVES_FW_PLATFORM, "bbb")
define(NERVES_FW_ARCHITECTURE, "arm")
define(NERVES_FW_AUTHOR, "The Nerves Team")

define(NERVES_FW_DEVPATH, "/dev/mmcblk0")
define(NERVES_FW_APPLICATION_PART0_DEVPATH, "/dev/mmcblk0p6") # Application is logical partition 6
define(NERVES_FW_APPLICATION_PART0_FSTYPE, "f2fs")
define(NERVES_FW_APPLICATION_PART0_TARGET, "/root")
define(NERVES_PROVISIONING, "${NERVES_SYSTEM}/images/fwup_include/provisioning.conf")

# Default paths if not specified via the commandline
define(ROOTFS, "${NERVES_SYSTEM}/images/rootfs.squashfs")

# This configuration file will create an image that has an MBR with 2 primary
# partitions, 1 boot partition, and 1 extended partition containing 2 logical partitions:
#
# +----------------------------+
# | MBR                        |
# +----------------------------+
# | Firmware configuration data|
# | (formatted as uboot env)   |
# +----------------------------+
# | p0: Boot partition (FAT32) |
# | u-boot.img                 |
# | zImage.a                   |
# | zImage.b                   |
# | zImage.c                   |
# +----------------------------+
# | p1: Rootfs A (squashfs)    |
# +----------------------------+
# | p2: Rootfs B (squashfs)    |
# +----------------------------+
# | p3: Extended partition     |
# |   p5: Rootfs C (squashfs)  |
# |   p6: Application (f2fs)   |
# +----------------------------+

# The U-Boot environment is written directly to the SDCard/eMMC. It is not
# in any partition
define(UBOOT_ENV_OFFSET, 2048)
define(UBOOT_ENV_COUNT, 256)  # 128 KB

# The boot partition contains MLO, u-boot.img, and zImage
define(BOOT_PART_OFFSET, 4096)
define(BOOT_PART_COUNT, 28672)

# Let the rootfs have room to grow up to 140 MiB and align it to the nearest 1
# MB boundary
define(ROOTFS_A_PART_OFFSET, 63488)
define(ROOTFS_A_PART_COUNT, 286720)
define-eval(ROOTFS_B_PART_OFFSET, "${ROOTFS_A_PART_OFFSET} + ${ROOTFS_A_PART_COUNT}")
define(ROOTFS_B_PART_COUNT, ${ROOTFS_A_PART_COUNT})

# Primary partition 3: Extended partition container (MUST be partition 3 per MBR spec)
# Contains logical partitions for Rootfs C and Application data
define-eval(EXTENDED_PART_OFFSET, "${ROOTFS_B_PART_OFFSET} + ${ROOTFS_B_PART_COUNT}")
define(ROOTFS_C_PART_COUNT, 286720) # Same size as A and B
define(APP_PART_COUNT, 1048576)
define-eval(EXTENDED_PART_COUNT, "${ROOTFS_C_PART_COUNT} + ${APP_PART_COUNT} + 2048") # Extra for EBR headers

# Logical partition 5: Rootfs C (first logical partition in extended)
define-eval(ROOTFS_C_PART_OFFSET, "${EXTENDED_PART_OFFSET} + 1024") # Offset for EBR

# Logical partition 6: Application data (second logical partition in extended)
define-eval(APP_PART_OFFSET, "${ROOTFS_C_PART_OFFSET} + ${ROOTFS_C_PART_COUNT} + 1024") # Offset for second EBR

# Firmware archive metadata
meta-product = ${NERVES_FW_PRODUCT}
meta-description = ${NERVES_FW_DESCRIPTION}
meta-version = ${NERVES_FW_VERSION}
meta-platform = ${NERVES_FW_PLATFORM}
meta-architecture = ${NERVES_FW_ARCHITECTURE}
meta-author = ${NERVES_FW_AUTHOR}
meta-vcs-identifier = ${NERVES_FW_VCS_IDENTIFIER}
meta-misc = ${NERVES_FW_MISC}